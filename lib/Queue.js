// Generated by CoffeeScript 1.10.0
(function() {
  var AWS, Queue, Worker, url;

  AWS = require('aws-sdk');

  url = require('url');

  Worker = require('./Worker');

  Queue = (function() {
    function Queue(options1) {
      this.options = options1;
      this.sqs = new AWS.SQS({
        accessKeyId: this.options.accessKeyId,
        secretAccessKey: this.options.secretAccessKey,
        region: this.options.region || this._getRegionFromQueueUrl(this.options.QueueUrl)
      });
    }

    Queue.prototype.push = function(data, state) {
      if (state == null) {
        state = 'default';
      }
      return new Promise((function(_this) {
        return function(resolve, reject) {
          var params;
          params = {
            MessageAttributes: {}
          };
          params.MessageBody = JSON.stringify(data);
          params.QueueUrl = _this.options.QueueUrl;
          params.DelaySeconds = params.DelaySeconds || 0;
          return _this.sqs.sendMessage(params, function(err, data) {
            if (err) {
              return reject(err, err.stack);
            }
            return resolve(data);
          });
        };
      })(this));
    };

    Queue.prototype.purge = function() {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          return _this.sqs.purgeQueue({
            QueueUrl: _this.options.QueueUrl
          }, function(err, data) {
            if (err) {
              return reject(err);
            }
            return resolve(data);
          });
        };
      })(this));
    };

    Queue.prototype.createWorker = function(fn, options) {
      if (options == null) {
        options = {};
      }
      options = Object.create(this.options);
      options.sqs = this.sqs;
      options.concurrency = options.concurrency || 1;
      return new Worker(options, fn);
    };

    Queue.prototype._getRegionFromQueueUrl = function(queueUrl) {
      var hostname;
      hostname = url.parse(queueUrl).hostname;
      return hostname.replace(/sqs.([^\.]+).amazonaws.com/, '$1');
    };

    return Queue;

  })();

  module.exports = Queue;

}).call(this);
